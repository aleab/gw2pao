<UserControl x:Class="GW2PAO.Modules.Tasks.Views.TaskTracker.TaskView"
             xmlns="http://schemas.microsoft.com/winfx/2006/xaml/presentation"
             xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml"
             xmlns:mc="http://schemas.openxmlformats.org/markup-compatibility/2006" 
             xmlns:d="http://schemas.microsoft.com/expression/blend/2008" 
             xmlns:resx="clr-namespace:GW2PAO.Properties"
             xmlns:converters="clr-namespace:GW2PAO.Converters"
             xmlns:core="clr-namespace:GW2PAO.PresentationCore;assembly=GW2PAO.PresentationCore"
             xmlns:fa="http://schemas.awesome.incremented/wpf/xaml/fontawesome.sharp"
             mc:Ignorable="d" d:DesignWidth="225"
             SnapsToDevicePixels="True"
             UseLayoutRounding="True"
             Height="31"
             TextOptions.TextFormattingMode="Display"
             ToolTipService.InitialShowDelay="0">
    
    <UserControl.Resources>
        <converters:TimespanConverter x:Key="TimeConverter" />
        <converters:BoolToVisibleHiddenConverter x:Key="BoolToVisibilityConverter" />
    </UserControl.Resources>
    
    <UserControl.ContextMenu>
        <ContextMenu>
            <MenuItem Header="{x:Static resx:Resources.CopyWaypointCode}" Command="{Binding CopyWaypointCommand}">
                <MenuItem.Style>
                    <Style TargetType="MenuItem" BasedOn="{StaticResource {x:Type MenuItem}}">
                        <Style.Triggers>
                            <DataTrigger Binding="{Binding Task.WaypointCode}" Value="{x:Null}">
                                <Setter Property="Visibility" Value="Collapsed" />
                            </DataTrigger>
                        </Style.Triggers>
                    </Style>
                </MenuItem.Style>
            </MenuItem>
            <MenuItem Header="{x:Static resx:Resources.Edit}" Command="{Binding EditCommand}" />
            <MenuItem Header="{x:Static resx:Resources.Delete}" Command="{Binding DeleteCommand}" />
        </ContextMenu>
    </UserControl.ContextMenu>

    <UserControl.Style>
        <Style TargetType="UserControl">
            <Setter Property="ToolTip">
                <Setter.Value>
                    <StackPanel>
                        <TextBlock Text="{Binding MapName}">
                            <TextBlock.Style>
                                <Style TargetType="TextBlock">
                                    <Style.Triggers>
                                        <DataTrigger Binding="{Binding HasZoneLocation}" Value="False">
                                            <Setter Property="Visibility" Value="Collapsed" />
                                        </DataTrigger>
                                    </Style.Triggers>
                                </Style>
                            </TextBlock.Style>
                        </TextBlock>
                        <TextBlock Text="{Binding Task.Description}">
                            <TextBlock.Style>
                                <Style TargetType="TextBlock">
                                    <Style.Triggers>
                                        <DataTrigger Binding="{Binding Task.Description}" Value="{x:Null}">
                                            <Setter Property="Visibility" Value="Collapsed" />
                                        </DataTrigger>
                                        <DataTrigger Binding="{Binding Task.Description}" Value="">
                                            <Setter Property="Visibility" Value="Collapsed" />
                                        </DataTrigger>
                                    </Style.Triggers>
                                </Style>
                            </TextBlock.Style>
                        </TextBlock>
                    </StackPanel>
                </Setter.Value>
            </Setter>
            <Style.Triggers>
                <MultiDataTrigger>
                    <MultiDataTrigger.Conditions>
                        <Condition Binding="{Binding HasZoneLocation}" Value="False" />
                        <Condition Binding="{Binding Task.Description}" Value="{x:Null}" />
                    </MultiDataTrigger.Conditions>
                    <Setter Property="ToolTip" Value="{x:Null}" />
                </MultiDataTrigger>
                <MultiDataTrigger>
                    <MultiDataTrigger.Conditions>
                        <Condition Binding="{Binding HasZoneLocation}" Value="False" />
                        <Condition Binding="{Binding Task.Description}" Value="" />
                    </MultiDataTrigger.Conditions>
                    <Setter Property="ToolTip" Value="{x:Null}" />
                </MultiDataTrigger>
            </Style.Triggers>
        </Style>
    </UserControl.Style>

    <Border Name="TaskMainPanel" CornerRadius="0" Margin="0" Padding="5,0,0,0"
            Background="{StaticResource ItemMouseOverBackground}">

        <Border.Style>
            <Style TargetType="Border">
                <Style.Triggers>
                    <DataTrigger Binding="{Binding ElementName=TaskMainPanel, Path=IsMouseOver}" Value="True">
                        <DataTrigger.EnterActions>
                            <BeginStoryboard>
                                <Storyboard>
                                    <DoubleAnimation To="1"
                                                     Storyboard.TargetProperty="Background.Opacity"
                                                     Duration="00:00:0.05"/>
                                </Storyboard>
                            </BeginStoryboard>
                        </DataTrigger.EnterActions>
                        <DataTrigger.ExitActions>
                            <BeginStoryboard>
                                <Storyboard>
                                    <DoubleAnimation To="0"
                                                     Storyboard.TargetProperty="Background.Opacity"
                                                     Duration="00:00:00.05"/>
                                </Storyboard>
                            </BeginStoryboard>
                        </DataTrigger.ExitActions>
                    </DataTrigger>
                </Style.Triggers>
            </Style>
        </Border.Style>

        <Grid Margin="0,1,0,1"
              VerticalAlignment="Center">

            <Grid.ColumnDefinitions>
                <ColumnDefinition Width="Auto" />
                <ColumnDefinition Width="*"/>
                <ColumnDefinition Width="Auto" />
                <ColumnDefinition Width="Auto" />
            </Grid.ColumnDefinitions>

            <Image Grid.Column="0"
                   Height="25" Width="25"
                   VerticalAlignment="Center">
                <Image.Style>
                    <Style TargetType="Image">
                        <Setter Property="Source" Value="{Binding Task.IconUri}" />
                        <Style.Triggers>
                            <DataTrigger Binding="{Binding Task.IconUri}" Value="{x:Null}">
                                <Setter Property="Visibility" Value="Collapsed" />
                                <Setter Property="Source" Value="/Images/Commerce/unknown_icon.png" />
                            </DataTrigger>
                        </Style.Triggers>
                    </Style>
                </Image.Style>
            </Image>

            <core:OutlinedTextBlock Name="TaskNameTextblock"
                                    Grid.Column="1"
                                    VerticalAlignment="Center"
                                    TextWrapping="Wrap"
                                    Margin="5,0,0,0"
                                    Text="{Binding Task.Name}" />

            <CheckBox Name="IsCompletedCheckbox"
                      Grid.Column="2"
                      Margin="5,0,0,0"
                      VerticalAlignment="Center"
                      Style="{StaticResource AlternateCheckboxStyle}"
                      Visibility="{Binding Task.IsCompletable, Converter={StaticResource BoolToVisibilityConverter}}"
                      IsChecked="{Binding IsCompleted}" />

            <Grid Grid.Column="3"
                  Margin="0,0,5,0"
                  Visibility="{Binding DisplayLocation, Converter={StaticResource BoolToVisibilityConverter}}"
                  VerticalAlignment="Center"
                  HorizontalAlignment="Center"
                  Width="35">
                <Grid.RowDefinitions>
                    <RowDefinition Height="*" />
                    <RowDefinition Height="Auto" />
                </Grid.RowDefinitions>
                <Grid Name="DirectionGrid"
                      Height="15" Width="13"
                      Grid.Row="0">
                    <Path Stroke="Black" Fill="Goldenrod"
                          StrokeThickness="1"
                          StrokeStartLineCap="Round" StrokeEndLineCap="Round"
                          RenderTransformOrigin="0.5,0.5">
                        <Path.Style>
                            <Style>
                                <Setter Property="Path.Stretch" Value="Uniform" />
                                <Setter Property="Path.RenderTransform">
                                    <Setter.Value>
                                        <TransformGroup>
                                            <RotateTransform Angle="{Binding DirectionFromPlayer}" />
                                        </TransformGroup>
                                    </Setter.Value>
                                </Setter>
                                <Setter Property="Path.Data">
                                    <Setter.Value>
                                        <PathGeometry FillRule="Nonzero">
                                            <PathGeometry.Figures>
                                                <PathFigure StartPoint="5,0">
                                                    <LineSegment Point="10,10"/>
                                                    <LineSegment Point="5,8" />
                                                    <LineSegment Point="0,10"/>
                                                    <LineSegment Point="5,0"/>
                                                </PathFigure>
                                            </PathGeometry.Figures>
                                        </PathGeometry>
                                    </Setter.Value>
                                </Setter>
                                <Style.Triggers>
                                    <DataTrigger Binding="{Binding IsAtPlayer}" Value="True">
                                        <Setter Property="Path.Stretch" Value="None" />
                                        <Setter Property="Path.Data">
                                            <Setter.Value>
                                                <EllipseGeometry Center="6.5,7.5" RadiusX="5" RadiusY="5" />
                                            </Setter.Value>
                                        </Setter>
                                    </DataTrigger>
                                </Style.Triggers>
                            </Style>
                        </Path.Style>
                    </Path>
                </Grid>
                <StackPanel Orientation="Horizontal"
                            VerticalAlignment="Center" HorizontalAlignment="Center"
                            Grid.Row="1"
                            Opacity="0.75">
                    <core:OutlinedTextBlock Name="DistanceTextblock"
                                            VerticalAlignment="Center" HorizontalAlignment="Center"
                                            FontSize="10">
                        <core:OutlinedTextBlock.Style>
                            <Style TargetType="core:OutlinedTextBlock" BasedOn="{StaticResource {x:Type core:OutlinedTextBlock}}">
                                <Setter Property="Text" Value="{Binding DistanceFromPlayer, StringFormat={}{0:0.##}}"/>
                                <Style.Triggers>
                                    <DataTrigger Binding="{Binding UserData.DistanceUnits}" Value="TimeDistance">
                                        <Setter Property="Text" Value="{Binding DistanceFromPlayer, Converter={StaticResource TimeConverter}, ConverterParameter=true}"/>
                                    </DataTrigger>
                                </Style.Triggers>
                            </Style>
                        </core:OutlinedTextBlock.Style>
                    </core:OutlinedTextBlock>
                    <core:OutlinedTextBlock VerticalAlignment="Center" HorizontalAlignment="Left"
                                            FontSize="10">
                        <core:OutlinedTextBlock.Style>
                            <Style TargetType="core:OutlinedTextBlock" BasedOn="{StaticResource {x:Type core:OutlinedTextBlock}}">
                                <Setter Property="Text" Value=" ft"/>
                                <Style.Triggers>
                                    <DataTrigger Binding="{Binding UserData.DistanceUnits}" Value="Meters">
                                        <Setter Property="Text" Value=" m"/>
                                    </DataTrigger>
                                    <DataTrigger Binding="{Binding UserData.DistanceUnits}" Value="TimeDistance">
                                        <Setter Property="Text" Value=""/>
                                    </DataTrigger>
                                </Style.Triggers>
                            </Style>
                        </core:OutlinedTextBlock.Style>
                    </core:OutlinedTextBlock>
                </StackPanel>
            </Grid>
            <Grid Grid.Column="3"
                  Visibility="{Binding DisplayLocation, Converter={StaticResource BoolToVisibilityConverter}}"
                  VerticalAlignment="Top"
                  HorizontalAlignment="Right"
                  Margin="0,4,0,0">
                <Path Stretch="Uniform"
                      Stroke="Black"
                      Fill="PaleGreen"
                      Opacity="0.8"
                      StrokeThickness=".75"
                      StrokeStartLineCap="Round"
                      StrokeEndLineCap="Round"
                      StrokeLineJoin="Round"
                      Data="M 5,0  L 10,8  L 5,6  L 0,8  L 5,0"
                      Visibility="{Binding IsAbovePlayer, Converter={StaticResource BoolToVisibilityConverter}}" />
                <Path Stretch="Uniform"
                      Stroke="Black"
                      Fill="PaleGreen"
                      Opacity="0.8"
                      StrokeThickness=".5"
                      StrokeStartLineCap="Round"
                      StrokeEndLineCap="Round"
                      StrokeLineJoin="Round"
                      Data="M 5,8  L 10,0  L 5,2  L 0,0  L 5,8"
                      Visibility="{Binding IsBelowPlayer, Converter={StaticResource BoolToVisibilityConverter}}" />
            </Grid>
        </Grid>
    </Border>
</UserControl>
